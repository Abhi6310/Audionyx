{{!-- <div class="vis-container">
  <!-- Visualizer -->
  <div class="mt-5">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/102/three.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/simplex-noise/2.3.0/simplex-noise.min.js"></script>
    <link rel="stylesheet" href="../resources/css/visualizer.css"> 

    <div id="visualiser">
        <!-- Visualizer plays here-->
    </div>

    <div id="play-header">
      <label for="audio" id="label">Select file or choose from your library</label>
      <input type="file" id="audio" accept=".mp3">
      <!-- Play icon (SVG) -->
      <svg id="play-button" xmlns="http://www.w3.org/2000/svg" width="50" height="50" fill="currentColor" class="bi bi-play rounded-circle" viewBox="0 0 16 16" style="cursor: pointer;">
        <path d="M10.804 8 5 4.633v6.734zm.792-.696a.802.802 0 0 1 0 1.392l-6.363 3.692C4.713 12.69 4 12.345 4 11.692V4.308c0-.653.713-.998 1.233-.696z"/>
      </svg>
    </div>

      <!-- Visualization will appear here -->
    </div>
  </div>
</div>

<!-- JavaScript for Play/Pause Functionality -->
<script>
  const playButton = document.getElementById('play-button');
  const audioElement = document.getElementById('audio');
  let audio = null;  // Will store the audio player instance

  // Load the audio file when user selects it
  document.getElementById('audio').addEventListener('change', async function (event) {
    const file = event.target.files[0];
    if (file) {
        const reader = new FileReader();

        reader.onload = async function () {
            const base64Audio = reader.result.split(',')[1]; // Get Base64 data, removing the prefix
            const projectData = {
                projectName: "My Audio Project", // Replace with dynamic project name
                description: "Sample description", // Replace with dynamic description
                base64Encoding: base64Audio,
                libraryId: 1 // Replace with the relevant library_id
            };

            // Send data to the server
            const response = await fetch('/api/save-audio', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(projectData)
            });

            console.log("Response: ", response);

            if (response.ok) {
                console.log('Audio saved successfully!');
            } else {
                console.error('Error saving audio:', response.statusText);
            }
        };

        reader.readAsDataURL(file); // Converts file to Base64 string
    }
});

  // Play/pause functionality when play button (SVG) is clicked
  playButton.addEventListener('click', function () {
    if (audio.paused) {
      audio.play();
      // Switch to pause icon when playing
      playButton.innerHTML = `<path d="M4 3h3v10H4zM9 3h3v10H9z"/>`;  // Pause icon path
    } else {
      audio.pause();
      // Switch to play icon when paused
      playButton.innerHTML = `<path d="M10.804 8 5 4.633v6.734zm.792-.696a.802.802 0 0 1 0 1.392l-6.363 3.692C4.713 12.69 4 12.345 4 11.692V4.308c0-.653.713-.998 1.233-.696z"/>`;  // Play icon path
    }
  });
  
</script>
 --}}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Audio Visualizer</title>
    <link rel="stylesheet" href="./../../resources/css/visualizer.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r128/three.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/simplex-noise/2.4.0/simplex-noise.min.js"></script>
</head>
<body>
    <div id="visualiser" style="width: 100vw; height: 100vh; overflow: hidden; background-color: black;"></div>

    <script src="/resources/js/visualizer.js"></script>
<script>
    document.addEventListener('DOMContentLoaded', () => {
        const projectId = new URLSearchParams(window.location.search).get('projectID');
        if (typeof fetchAndVisualizeAudio === "function") {
            fetchAndVisualizeAudio(projectId);
        } else {
            console.error("fetchAndVisualizeAudio is not defined. Ensure visualizer.js is loaded.");
        }
    });
</script>
</body>
</html>


